[2023-09-16T10:02:56.167+0000] {processor.py:157} INFO - Started process (PID=20048) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:02:56.172+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:02:56.174+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:02:56.174+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:02:56.482+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:02:56.970+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:02:56.969+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:02:57.656+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:02:57.655+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:02:58.037+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 1.912 seconds
[2023-09-16T10:03:28.784+0000] {processor.py:157} INFO - Started process (PID=20103) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:03:28.807+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:03:28.837+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:03:28.828+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:03:29.407+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:03:30.236+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:03:30.234+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:03:30.801+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:03:30.800+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:03:31.124+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 2.383 seconds
[2023-09-16T10:04:01.637+0000] {processor.py:157} INFO - Started process (PID=20147) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:01.672+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:04:01.679+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:01.675+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:01.762+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:01.957+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:01.955+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:04:02.207+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:02.197+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:04:02.420+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.821 seconds
[2023-09-16T10:04:33.193+0000] {processor.py:157} INFO - Started process (PID=20179) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:33.200+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:04:33.204+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:33.203+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:33.260+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:04:33.502+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:33.501+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:04:33.696+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:04:33.695+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:04:33.823+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.656 seconds
[2023-09-16T10:05:04.362+0000] {processor.py:157} INFO - Started process (PID=20210) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:04.365+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:05:04.369+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:04.368+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:04.691+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:05.285+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:05.285+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:05:05.447+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:05.446+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:05:05.615+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 1.270 seconds
[2023-09-16T10:05:35.833+0000] {processor.py:157} INFO - Started process (PID=20242) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:35.837+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:05:35.840+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:35.839+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:35.892+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:05:36.042+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:36.041+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:05:36.206+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:05:36.206+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:05:36.299+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.489 seconds
[2023-09-16T10:06:06.420+0000] {processor.py:157} INFO - Started process (PID=20274) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:06.423+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:06:06.425+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:06.424+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:06.465+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:06.564+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:06.563+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:06:06.681+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:06.680+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:06:06.742+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.333 seconds
[2023-09-16T10:06:37.256+0000] {processor.py:157} INFO - Started process (PID=20307) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:37.266+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:06:37.268+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:37.267+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:37.306+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:06:37.397+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:37.396+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:06:37.506+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:06:37.505+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:06:37.606+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.365 seconds
[2023-09-16T10:07:08.021+0000] {processor.py:157} INFO - Started process (PID=20339) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:08.024+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:07:08.028+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:08.026+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:08.069+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:08.161+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:08.161+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:07:08.278+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:08.277+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:07:08.347+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.345 seconds
[2023-09-16T10:07:38.965+0000] {processor.py:157} INFO - Started process (PID=20371) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:38.969+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:07:38.972+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:38.971+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:39.021+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:07:39.156+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:39.155+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:07:39.276+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:07:39.276+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:07:39.353+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.402 seconds
[2023-09-16T10:08:09.502+0000] {processor.py:157} INFO - Started process (PID=20403) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:09.504+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:08:09.507+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:09.506+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:09.548+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:09.634+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:09.634+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:08:09.757+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:09.757+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:08:09.831+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.340 seconds
[2023-09-16T10:08:40.352+0000] {processor.py:157} INFO - Started process (PID=20435) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:40.356+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:08:40.359+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:40.357+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:40.406+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:08:40.510+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:40.509+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:08:40.650+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:08:40.649+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:08:40.723+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.387 seconds
[2023-09-16T10:09:10.962+0000] {processor.py:157} INFO - Started process (PID=20466) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:10.965+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:09:10.968+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:10.967+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:11.026+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:11.198+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:11.197+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:09:11.392+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:11.390+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:09:11.517+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.576 seconds
[2023-09-16T10:09:41.642+0000] {processor.py:157} INFO - Started process (PID=20498) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:41.646+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:09:41.649+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:41.648+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:41.704+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:09:41.847+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:41.846+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:09:41.991+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:09:41.990+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:09:42.092+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.467 seconds
[2023-09-16T10:10:12.913+0000] {processor.py:157} INFO - Started process (PID=20529) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:12.938+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:10:12.942+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:12.940+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:13.186+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:13.590+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:13.589+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:10:13.871+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:13.870+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:10:14.146+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 1.351 seconds
[2023-09-16T10:10:44.693+0000] {processor.py:157} INFO - Started process (PID=20561) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:44.696+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:10:44.699+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:44.698+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:44.741+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:10:44.863+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:44.862+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:10:44.980+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:10:44.980+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:10:45.080+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.399 seconds
[2023-09-16T10:11:15.358+0000] {processor.py:157} INFO - Started process (PID=20593) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:15.360+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:11:15.364+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:15.362+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:15.420+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:15.538+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:15.537+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:11:15.688+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:15.687+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:11:15.803+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.460 seconds
[2023-09-16T10:11:46.100+0000] {processor.py:157} INFO - Started process (PID=20625) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:46.104+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:11:46.107+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:46.106+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:46.172+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:11:46.312+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:46.311+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:11:46.473+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:11:46.472+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:11:46.584+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.503 seconds
[2023-09-16T10:12:16.971+0000] {processor.py:157} INFO - Started process (PID=20657) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:16.974+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:12:16.978+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:16.977+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:17.039+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:17.176+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:17.175+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:12:17.318+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:17.317+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:12:17.408+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.456 seconds
[2023-09-16T10:12:47.949+0000] {processor.py:157} INFO - Started process (PID=20689) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:47.953+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:12:47.957+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:47.956+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:48.001+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:12:48.200+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:48.199+0000] {dag.py:2907} INFO - Sync 1 DAGs
[2023-09-16T10:12:48.343+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:12:48.342+0000] {dag.py:3677} INFO - Setting next_dagrun for ganza_dag_catchup_backfill_v18 to 2023-09-16T00:00:00+00:00, run_after=2023-09-17T00:00:00+00:00
[2023-09-16T10:12:48.427+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/dag_with_catchup_and_backfill.py took 0.496 seconds
[2023-09-16T10:13:18.919+0000] {processor.py:157} INFO - Started process (PID=20721) to work on /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:13:18.939+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/dag_with_catchup_and_backfill.py for tasks to queue
[2023-09-16T10:13:18.942+0000] {logging_mixin.py:151} INFO - [2023-09-16T10:13:18.941+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:13:19.158+0000] {processor.py:839} INFO - DAG(s) dict_keys(['ganza_dag_catchup_backfill_v18']) retrieved from /opt/airflow/dags/dag_with_catchup_and_backfill.py
[2023-09-16T10:13:19.730+0000] {processor.py:182} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 146, in _do_get
    self._dec_overflow()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 143, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 691, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not translate host name "postgres" to address: Temporary failure in name resolution


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/dag_processing/processor.py", line 178, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/dag_processing/processor.py", line 159, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 77, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/dag_processing/processor.py", line 857, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/api_internal/internal_api_call.py", line 112, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 77, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/dag_processing/processor.py", line 893, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 74, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/airflow/.local/lib/python3.8/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/home/airflow/.local/lib/python3.8/site-packages/tenacity/__init__.py", line 325, in iter
    raise retry_exc.reraise()
  File "/home/airflow/.local/lib/python3.8/site-packages/tenacity/__init__.py", line 158, in reraise
    raise self.last_attempt.result()
  File "/usr/local/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/local/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 669, in _sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 636, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 74, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/serialized_dag.py", line 147, in write_dag
    if session.scalar(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 750, in _connection_for_bind
    conn = bind.connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/future/engine.py", line 406, in connect
    return super(Engine, self).connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3325, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 96, in __init__
    else engine.raw_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3404, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3374, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2208, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 146, in _do_get
    self._dec_overflow()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 143, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 691, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name "postgres" to address: Temporary failure in name resolution

(Background on this error at: https://sqlalche.me/e/14/e3q8)
